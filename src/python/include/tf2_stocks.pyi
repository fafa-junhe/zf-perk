from typing import Any, list, Callable, Union
from .sdktools import *
from .tf2 import *


class TFResourceType:
    TFResource_Backstabs: int = ...
    TFResource_BuildingsDestroyed: int = ...
    TFResource_Captures: int = ...
    TFResource_Deaths: int = ...
    TFResource_Defenses: int = ...
    TFResource_Dominations: int = ...
    TFResource_Headshots: int = ...
    TFResource_HealPoints: int = ...
    TFResource_Invulns: int = ...
    TFResource_KillAssists: int = ...
    TFResource_MaxHealth: int = ...
    TFResource_Ping: int = ...
    TFResource_PlayerClass: int = ...
    TFResource_ResupplyPoints: int = ...
    TFResource_Revenge: int = ...
    TFResource_Score: int = ...
    TFResource_Teleports: int = ...
    TFResource_TotalScore: int = ...


TF_CUSTOM_HEADSHOT: int = ...
TF_CUSTOM_BACKSTAB: int = ...
TF_CUSTOM_BURNING: int = ...
TF_CUSTOM_WRENCH_FIX: int = ...
TF_CUSTOM_MINIGUN: int = ...
TF_CUSTOM_SUICIDE: int = ...
TF_CUSTOM_TAUNT_HADOUKEN: int = ...
TF_CUSTOM_BURNING_FLARE: int = ...
TF_CUSTOM_TAUNT_HIGH_NOON: int = ...
TF_CUSTOM_TAUNT_GRAND_SLAM: int = ...
TF_CUSTOM_PENETRATE_MY_TEAM: int = ...
TF_CUSTOM_PENETRATE_ALL_PLAYERS: int = ...
TF_CUSTOM_TAUNT_FENCING: int = ...
TF_CUSTOM_PENETRATE_HEADSHOT: int = ...
TF_CUSTOM_TAUNT_ARROW_STAB: int = ...
TF_CUSTOM_TELEFRAG: int = ...
TF_CUSTOM_BURNING_ARROW: int = ...
TF_CUSTOM_FLYINGBURN: int = ...
TF_CUSTOM_PUMPKIN_BOMB: int = ...
TF_CUSTOM_DECAPITATION: int = ...
TF_CUSTOM_TAUNT_GRENADE: int = ...
TF_CUSTOM_BASEBALL: int = ...
TF_CUSTOM_CHARGE_IMPACT: int = ...
TF_CUSTOM_TAUNT_BARBARIAN_SWING: int = ...
TF_CUSTOM_AIR_STICKY_BURST: int = ...
TF_CUSTOM_DEFENSIVE_STICKY: int = ...
TF_CUSTOM_PICKAXE: int = ...
TF_CUSTOM_ROCKET_DIRECTHIT: int = ...
TF_CUSTOM_TAUNT_UBERSLICE: int = ...
TF_CUSTOM_PLAYER_SENTRY: int = ...
TF_CUSTOM_STANDARD_STICKY: int = ...
TF_CUSTOM_SHOTGUN_REVENGE_CRIT: int = ...
TF_CUSTOM_TAUNT_ENGINEER_SMASH: int = ...
TF_CUSTOM_BLEEDING: int = ...
TF_CUSTOM_GOLD_WRENCH: int = ...
TF_CUSTOM_CARRIED_BUILDING: int = ...
TF_CUSTOM_COMBO_PUNCH: int = ...
TF_CUSTOM_TAUNT_ENGINEER_ARM: int = ...
TF_CUSTOM_FISH_KILL: int = ...
TF_CUSTOM_TRIGGER_HURT: int = ...
TF_CUSTOM_DECAPITATION_BOSS: int = ...
TF_CUSTOM_STICKBOMB_EXPLOSION: int = ...
TF_CUSTOM_AEGIS_ROUND: int = ...
TF_CUSTOM_FLARE_EXPLOSION: int = ...
TF_CUSTOM_BOOTS_STOMP: int = ...
TF_CUSTOM_PLASMA: int = ...
TF_CUSTOM_PLASMA_CHARGED: int = ...
TF_CUSTOM_PLASMA_GIB: int = ...
TF_CUSTOM_PRACTICE_STICKY: int = ...
TF_CUSTOM_EYEBALL_ROCKET: int = ...
TF_CUSTOM_HEADSHOT_DECAPITATION: int = ...
TF_CUSTOM_TAUNT_ARMAGEDDON: int = ...
TF_CUSTOM_FLARE_PELLET: int = ...
TF_CUSTOM_CLEAVER: int = ...
TF_CUSTOM_CLEAVER_CRIT: int = ...
TF_CUSTOM_SAPPER_RECORDER_DEATH: int = ...
TF_CUSTOM_MERASMUS_PLAYER_BOMB: int = ...
TF_CUSTOM_MERASMUS_GRENADE: int = ...
TF_CUSTOM_MERASMUS_ZAP: int = ...
TF_CUSTOM_MERASMUS_DECAPITATION: int = ...
TF_CUSTOM_CANNONBALL_PUSH: int = ...
TF_CUSTOM_TAUNT_ALLCLASS_GUITAR_RIFF: int = ...
TF_CUSTOM_THROWABLE: int = ...
TF_CUSTOM_THROWABLE_KILL: int = ...
TF_CUSTOM_SPELL_TELEPORT: int = ...
TF_CUSTOM_SPELL_SKELETON: int = ...
TF_CUSTOM_SPELL_MIRV: int = ...
TF_CUSTOM_SPELL_METEOR: int = ...
TF_CUSTOM_SPELL_LIGHTNING: int = ...
TF_CUSTOM_SPELL_FIREBALL: int = ...
TF_CUSTOM_SPELL_MONOCULUS: int = ...
TF_CUSTOM_SPELL_BLASTJUMP: int = ...
TF_CUSTOM_SPELL_BATS: int = ...
TF_CUSTOM_SPELL_TINY: int = ...
TF_CUSTOM_KART: int = ...
TF_CUSTOM_GIANT_HAMMER: int = ...
TF_CUSTOM_RUNE_REFLECT: int = ...
TF_CUSTOM_DRAGONS_FURY_IGNITE: int = ...
TF_CUSTOM_DRAGONS_FURY_BONUS_BURNING: int = ...
TF_CUSTOM_SLAP_KILL: int = ...
TF_CUSTOM_CROC: int = ...
TF_CUSTOM_TAUNTATK_GASBLAST: int = ...
TF_CUSTOM_AXTINGUISHER_BOOSTED: int = ...
TF_WEAPON_NONE: int = ...
TF_WEAPON_BAT: int = ...
TF_WEAPON_BAT_WOOD: int = ...
TF_WEAPON_BOTTLE: int = ...
TF_WEAPON_FIREAXE: int = ...
TF_WEAPON_CLUB: int = ...
TF_WEAPON_CROWBAR: int = ...
TF_WEAPON_KNIFE: int = ...
TF_WEAPON_FISTS: int = ...
TF_WEAPON_SHOVEL: int = ...
TF_WEAPON_WRENCH: int = ...
TF_WEAPON_BONESAW: int = ...
TF_WEAPON_SHOTGUN_PRIMARY: int = ...
TF_WEAPON_SHOTGUN_SOLDIER: int = ...
TF_WEAPON_SHOTGUN_HWG: int = ...
TF_WEAPON_SHOTGUN_PYRO: int = ...
TF_WEAPON_SCATTERGUN: int = ...
TF_WEAPON_SNIPERRIFLE: int = ...
TF_WEAPON_MINIGUN: int = ...
TF_WEAPON_SMG: int = ...
TF_WEAPON_SYRINGEGUN_MEDIC: int = ...
TF_WEAPON_TRANQ: int = ...
TF_WEAPON_ROCKETLAUNCHER: int = ...
TF_WEAPON_GRENADELAUNCHER: int = ...
TF_WEAPON_PIPEBOMBLAUNCHER: int = ...
TF_WEAPON_FLAMETHROWER: int = ...
TF_WEAPON_GRENADE_NORMAL: int = ...
TF_WEAPON_GRENADE_CONCUSSION: int = ...
TF_WEAPON_GRENADE_NAIL: int = ...
TF_WEAPON_GRENADE_MIRV: int = ...
TF_WEAPON_GRENADE_MIRV_DEMOMAN: int = ...
TF_WEAPON_GRENADE_NAPALM: int = ...
TF_WEAPON_GRENADE_GAS: int = ...
TF_WEAPON_GRENADE_EMP: int = ...
TF_WEAPON_GRENADE_CALTROP: int = ...
TF_WEAPON_GRENADE_PIPEBOMB: int = ...
TF_WEAPON_GRENADE_SMOKE_BOMB: int = ...
TF_WEAPON_GRENADE_HEAL: int = ...
TF_WEAPON_GRENADE_STUNBALL: int = ...
TF_WEAPON_GRENADE_JAR: int = ...
TF_WEAPON_GRENADE_JAR_MILK: int = ...
TF_WEAPON_PISTOL: int = ...
TF_WEAPON_PISTOL_SCOUT: int = ...
TF_WEAPON_REVOLVER: int = ...
TF_WEAPON_NAILGUN: int = ...
TF_WEAPON_PDA: int = ...
TF_WEAPON_PDA_ENGINEER_BUILD: int = ...
TF_WEAPON_PDA_ENGINEER_DESTROY: int = ...
TF_WEAPON_PDA_SPY: int = ...
TF_WEAPON_BUILDER: int = ...
TF_WEAPON_MEDIGUN: int = ...
TF_WEAPON_GRENADE_MIRVBOMB: int = ...
TF_WEAPON_FLAMETHROWER_ROCKET: int = ...
TF_WEAPON_GRENADE_DEMOMAN: int = ...
TF_WEAPON_SENTRY_BULLET: int = ...
TF_WEAPON_SENTRY_ROCKET: int = ...
TF_WEAPON_DISPENSER: int = ...
TF_WEAPON_INVIS: int = ...
TF_WEAPON_FLAREGUN: int = ...
TF_WEAPON_LUNCHBOX: int = ...
TF_WEAPON_JAR: int = ...
TF_WEAPON_COMPOUND_BOW: int = ...
TF_WEAPON_BUFF_ITEM: int = ...
TF_WEAPON_PUMPKIN_BOMB: int = ...
TF_WEAPON_SWORD: int = ...
TF_WEAPON_DIRECTHIT: int = ...
TF_WEAPON_LIFELINE: int = ...
TF_WEAPON_LASER_POINTER: int = ...
TF_WEAPON_DISPENSER_GUN: int = ...
TF_WEAPON_SENTRY_REVENGE: int = ...
TF_WEAPON_JAR_MILK: int = ...
TF_WEAPON_HANDGUN_SCOUT_PRIMARY: int = ...
TF_WEAPON_BAT_FISH: int = ...
TF_WEAPON_CROSSBOW: int = ...
TF_WEAPON_STICKBOMB: int = ...
TF_WEAPON_HANDGUN_SCOUT_SEC: int = ...
TF_WEAPON_SODA_POPPER: int = ...
TF_WEAPON_SNIPERRIFLE_DECAP: int = ...
TF_WEAPON_RAYGUN: int = ...
TF_WEAPON_PARTICLE_CANNON: int = ...
TF_WEAPON_MECHANICAL_ARM: int = ...
TF_WEAPON_DRG_POMSON: int = ...
TF_WEAPON_BAT_GIFTWRAP: int = ...
TF_WEAPON_GRENADE_ORNAMENT: int = ...
TF_WEAPON_RAYGUN_REVENGE: int = ...
TF_WEAPON_PEP_BRAWLER_BLASTER: int = ...
TF_WEAPON_CLEAVER: int = ...
TF_WEAPON_GRENADE_CLEAVER: int = ...
TF_WEAPON_STICKY_BALL_LAUNCHER: int = ...
TF_WEAPON_GRENADE_STICKY_BALL: int = ...
TF_WEAPON_SHOTGUN_BUILDING_RESCUE: int = ...
TF_WEAPON_CANNON: int = ...
TF_WEAPON_THROWABLE: int = ...
TF_WEAPON_GRENADE_THROWABLE: int = ...
TF_WEAPON_PDA_SPY_BUILD: int = ...
TF_WEAPON_GRENADE_WATERBALLOON: int = ...
TF_WEAPON_HARVESTER_SAW: int = ...
TF_WEAPON_SPELLBOOK: int = ...
TF_WEAPON_SPELLBOOK_PROJECTILE: int = ...
TF_WEAPON_SNIPERRIFLE_CLASSIC: int = ...
TF_WEAPON_PARACHUTE: int = ...
TF_WEAPON_GRAPPLINGHOOK: int = ...
TF_WEAPON_PASSTIME_GUN: int = ...
TF_WEAPON_CHARGED_SMG: int = ...
TF_WEAPON_BREAKABLE_SIGN: int = ...
TF_WEAPON_ROCKETPACK: int = ...
TF_WEAPON_SLAP: int = ...
TF_WEAPON_JAR_GAS: int = ...
TF_WEAPON_GRENADE_JAR_GAS: int = ...
TF_WEAPON_FLAME_BALL: int = ...
TFWeaponSlot_Primary: int = ...
TFWeaponSlot_Secondary: int = ...
TFWeaponSlot_Melee: int = ...
TFWeaponSlot_Grenade: int = ...
TFWeaponSlot_Building: int = ...
TFWeaponSlot_PDA: int = ...
TFWeaponSlot_Item1: int = ...
TFWeaponSlot_Item2: int = ...
TF_FLAGEVENT_PICKEDUP: int = ...
TF_FLAGEVENT_CAPTURED: int = ...
TF_FLAGEVENT_DEFENDED: int = ...
TF_FLAGEVENT_DROPPED: int = ...
TF_FLAGEVENT_RETURNED: int = ...
def TF2_GetClientTeam(client: int) -> int:
    """Gets a client's current team.

@param client        Client index.
@return              Current TFTeam of client.
@error               Invalid client index."""
    pass
def TF2_ChangeClientTeam(client: int, team: int) -> None:
    """Changes a client's current team.

@param client        Client index.
@param team          TFTeam team symbol.
@error               Invalid client index."""
    pass
def TF2_GetPlayerClass(client: int) -> int:
    """Gets a client's current class.

@param client        Player's index.
@return              Current TFClassType of player.
@error               Invalid client index."""
    pass
def TF2_SetPlayerClass(client: int, classType: int, weapons: bool = ..., persistent: bool = ...) -> None:
    """Sets a client's class.

Note: If setting player class in a player spawn hook weapons should be set to false.

@param client        Player's index.
@param classType     TFClassType class symbol.
@param weapons       This parameter is ignored.
@param persistent    If true, changes the player's desired class so the change stays after death.
@error               Invalid client index."""
    pass
def TF2_GetPlayerResourceData(client: int, type: TFResourceType) -> int:
    pass
def TF2_SetPlayerResourceData(client: int, type: TFResourceType, value: Any) -> bool:
    pass
def TF2_RemoveWeaponSlot(client: int, slot: int) -> None:
    """Removes all weapons from a client's weapon slot

@param client        Player's index.
@param slot          Slot index (0-5)
@error               Invalid client, invalid slot or lack of mod support"""
    pass
def TF2_RemoveAllWeapons(client: int) -> None:
    """Removes all weapons from a client

@param client        Player's index."""
    pass
def TF2_GetPlayerConditionFlags(client: int) -> int:
    pass
def TF2_IsPlayerInCondition(client: int, cond: TFCond) -> bool:
    """Check whether or not a condition is set on a player

@param client        Player's index.
@param cond          TFCond constant
@return              True if set, false otherwise"""
    pass
def TF2_GetObjectType(entity: int) -> TFObjectType:
    """Gets an entity's object type.

@param entity        Entity index.
@return              Current TFObjectType of entity.
@error               Invalid entity index."""
    pass
def TF2_GetObjectMode(entity: int) -> TFObjectMode:
    """Gets an entity's object mode.

@param entity        Entity index.
@return              Current TFObjectMode of entity.
@error               Invalid entity index."""
    pass
TF_CONDFLAG_NONE: Any = ...  # 0
TF_CONDFLAG_SLOWED: Any = ...  # (1 << 0)
TF_CONDFLAG_ZOOMED: Any = ...  # (1 << 1)
TF_CONDFLAG_DISGUISING: Any = ...  # (1 << 2)
TF_CONDFLAG_DISGUISED: Any = ...  # (1 << 3)
TF_CONDFLAG_CLOAKED: Any = ...  # (1 << 4)
TF_CONDFLAG_UBERCHARGED: Any = ...  # (1 << 5)
TF_CONDFLAG_TELEPORTGLOW: Any = ...  # (1 << 6)
TF_CONDFLAG_TAUNTING: Any = ...  # (1 << 7)
TF_CONDFLAG_UBERCHARGEFADE: Any = ...  # (1 << 8)
TF_CONDFLAG_CLOAKFLICKER: Any = ...  # (1 << 9)
TF_CONDFLAG_TELEPORTING: Any = ...  # (1 << 10)
TF_CONDFLAG_KRITZKRIEGED: Any = ...  # (1 << 11)
TF_CONDFLAG_DEADRINGERED: Any = ...  # (1 << 13)
TF_CONDFLAG_BONKED: Any = ...  # (1 << 14)
TF_CONDFLAG_DAZED: Any = ...  # (1 << 15)
TF_CONDFLAG_BUFFED: Any = ...  # (1 << 16)
TF_CONDFLAG_CHARGING: Any = ...  # (1 << 17)
TF_CONDFLAG_DEMOBUFF: Any = ...  # (1 << 18)
TF_CONDFLAG_CRITCOLA: Any = ...  # (1 << 19)
TF_CONDFLAG_INHEALRADIUS: Any = ...  # (1 << 20)
TF_CONDFLAG_HEALING: Any = ...  # (1 << 21)
TF_CONDFLAG_ONFIRE: Any = ...  # (1 << 22)
TF_CONDFLAG_OVERHEALED: Any = ...  # (1 << 23)
TF_CONDFLAG_JARATED: Any = ...  # (1 << 24)
TF_CONDFLAG_BLEEDING: Any = ...  # (1 << 25)
TF_CONDFLAG_DEFENSEBUFFED: Any = ...  # (1 << 26)
TF_CONDFLAG_MILKED: Any = ...  # (1 << 27)
TF_CONDFLAG_MEGAHEAL: Any = ...  # (1 << 28)
TF_CONDFLAG_REGENBUFFED: Any = ...  # (1 << 29)
TF_CONDFLAG_MARKEDFORDEATH: Any = ...  # (1 << 30)
TF_DEATHFLAG_KILLERDOMINATION: Any = ...  # (1 << 0)
TF_DEATHFLAG_ASSISTERDOMINATION: Any = ...  # (1 << 1)
TF_DEATHFLAG_KILLERREVENGE: Any = ...  # (1 << 2)
TF_DEATHFLAG_ASSISTERREVENGE: Any = ...  # (1 << 3)
TF_DEATHFLAG_FIRSTBLOOD: Any = ...  # (1 << 4)
TF_DEATHFLAG_DEADRINGER: Any = ...  # (1 << 5)
TF_DEATHFLAG_INTERRUPTED: Any = ...  # (1 << 6)
TF_DEATHFLAG_GIBBED: Any = ...  # (1 << 7)
TF_DEATHFLAG_PURGATORY: Any = ...  # (1 << 8)
TF_DEATHFLAG_MINIBOSS: Any = ...  # (1 << 9)
TF_DEATHFLAG_AUSTRALIUM: Any = ...  # (1 << 10)
offset: int = ...
entity: int = ...
extraWearable: int = ...
iCond: int = ...
bit: int = ...